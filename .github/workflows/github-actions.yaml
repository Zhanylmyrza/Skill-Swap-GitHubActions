name: GitHub Actions CI

on: [pull_request]

jobs:
  run_unittests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip and setuptools
        run: |
          python3 -m pip install --upgrade pip setuptools

      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install \
            asgiref==3.7.2 \
            async-timeout==4.0.3 \
            attrs==23.2.0 \
            autobahn==22.10.4 \
            Automat==22.10.0 \
            # Install remaining dependencies from requirements.txt
            -r requirements.txt
      - name: Prepare Environment
        run: |
          cd ./backend
          echo "SECRET_KEY = 'django-insecure-dummy-secret'" > ./auth_system/secrets.py

      - name: Run Tests
        run: |
          python3 manage.py test






# name: GitHub Actions Demo
# run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
# on: [pull_request]
# jobs:
#   run_unittests:
#     runs-on: ubuntu-latest
#     strategy:
#       max-parallel: 4
#       matrix:
#         python-version: ['3.8', '3.9', '3.10']
#     steps:
#       - name: Check out repository code
#         uses: actions/checkout@v3
#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v4
#         with:
#           python-version: ${{ matrix.python-version }}
#       - name: Install Dependencies
#         run: |
#           python3 -m pip install --upgrade pip
#           pip install -r requirements.txt
#       - name: Run Tests
#         run: |
#           cd ./backend
#           echo "SECRET_KEY = 'django-insecure-dummy-secret'" > ./auth_system/secrets.py
#           python3 manage.py test
#       # - name: Update passed icon
#       #   uses: Sibz/github-status-action@v1
#       #   with: 
#       #     authToken: ${{secrets.GIT_TOKEN}}
#       #     context: 'CI CHECK'
#       #     description: 'Passed'
#       #     state: 'success'
#       #     sha: ${{github.event.pull_request.head.sha || github.sha}}
#       # - name: Check coverage
#       #   run: |
#       #     python3 coverage_cicd.py
#       #   env:
#       #     COVERAGE_THRESHOLD: ${{vars.COVERAGE_THRESHOLD}}


