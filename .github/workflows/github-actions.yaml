
name: GitHub Actions CI
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€

on: [pull_request]

jobs:
  run_unittests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.11']
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: diplomka
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install --prefer-binary -r requirements.txt
          
      - name: Prepare Environment and Run Tests
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DJANGO_SECRET: ${{ secrets.DJANGO_SECRET }}
        run: |
          cd ./backend
          mkdir -p auth_system
          
          # Create secrets.py safely
          echo "
          SECRET_KEY = '${{ secrets.DJANGO_SECRET }}'
          
          DATABASES = {
              'default': {
                  'ENGINE': 'django.db.backends.postgresql',
                  'NAME': 'diplomka',
                  'USER': 'postgres',
                  'PASSWORD': '${{ secrets.DB_PASSWORD }}',
                  'HOST': 'localhost',
                  'PORT': '5432',
              }
          }
          " > auth_system/secrets.py
          
          python manage.py test accounts.tests

      - name: Check coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_GIST_ID: ${{ secrets.GIST_ID }}
        run: |
          cd ./backend
          python coverage_cicd.py
